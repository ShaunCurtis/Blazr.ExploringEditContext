@implements IDisposable

@code {
    [CascadingParameter] private EditContext CascadedEditContext { get; set; } = default!;

    private string ComponentId = Guid.NewGuid().ToString().Substring(0, 8);

    /// <summary>
    /// Can override this safely if you follow the basic pattern shown below
    /// It's the logical place to async code you want to execute
    ///  before any component rendering takes place.
    /// </summary>
    /// <param name="parameters"></param>
    /// <returns></returns>
    public override Task SetParametersAsync(ParameterView parameters)
    {
        // Always set the parameters first
        parameters.SetParameterProperties(this);

        ArgumentNullException.ThrowIfNull(this.CascadedEditContext);

        Console.WriteLine($"{this.GetType().Name} - {ComponentId} => EditContext exists: {this.CascadedEditContext is not null} ");

        // Always call the base method last with an empty ParameterView - We have already set them
        return base.SetParametersAsync(ParameterView.Empty);
    }
}

